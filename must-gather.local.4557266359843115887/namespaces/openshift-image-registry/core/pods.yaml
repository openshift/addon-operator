---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.0.75"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.0.75"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T18:36:40Z"
    generateName: cluster-image-registry-operator-f4545974d-
    labels:
      name: cluster-image-registry-operator
      pod-template-hash: f4545974d
    name: cluster-image-registry-operator-f4545974d-w8nrs
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cluster-image-registry-operator-f4545974d
      uid: 6882b681-0cda-4dec-b5ef-cb78a03f7fac
    resourceVersion: "63824"
    uid: 361c7a2f-ae75-4380-b24c-68884fa126d3
  spec:
    containers:
    - args:
      - --files=/var/run/configmaps/trusted-ca/tls-ca-bundle.pem
      - --files=/etc/secrets/tls.crt
      - --files=/etc/secrets/tls.key
      env:
      - name: RELEASE_VERSION
        value: 4.10.13
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OPERATOR_NAME
        value: cluster-image-registry-operator
      - name: IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      - name: IMAGE_PRUNER
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      - name: AZURE_ENVIRONMENT_FILEPATH
        value: /tmp/azurestackcloud.json
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:247cb529550b9595062e8b314f3f50a186324e2359ef17fea0e0607c798557c5
      imagePullPolicy: IfNotPresent
      name: cluster-image-registry-operator
      ports:
      - containerPort: 60000
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/configmaps/trusted-ca/
        name: trusted-ca
      - mountPath: /etc/secrets
        name: image-registry-operator-tls
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hzdl2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: cluster-image-registry-operator-dockercfg-ghb4f
    nodeName: ip-10-0-169-205.ec2.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: cluster-image-registry-operator
    serviceAccountName: cluster-image-registry-operator
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: image-registry-operator-tls
      secret:
        defaultMode: 420
        secretName: image-registry-operator-tls
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca
        optional: true
      name: trusted-ca
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - name: kube-api-access-hzdl2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:36:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:36:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:36:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://38cd726632abd85609752f8bc2543cfc0e55d81a4be5eddd698fe613c8716ddc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:247cb529550b9595062e8b314f3f50a186324e2359ef17fea0e0607c798557c5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:247cb529550b9595062e8b314f3f50a186324e2359ef17fea0e0607c798557c5
      lastState: {}
      name: cluster-image-registry-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:36:43Z"
    hostIP: 10.0.169.205
    phase: Running
    podIP: 10.128.0.75
    podIPs:
    - ip: 10.128.0.75
    qosClass: Burstable
    startTime: "2022-05-24T18:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.50"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.50"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T21:00:00Z"
    generateName: image-pruner-27557100-
    labels:
      controller-uid: 97fcd727-96a9-4f5e-a69a-b3976a0723db
      job-name: image-pruner-27557100
    name: image-pruner-27557100-bsx5l
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: image-pruner-27557100
      uid: 97fcd727-96a9-4f5e-a69a-b3976a0723db
    resourceVersion: "187345"
    uid: 4b201bda-eea0-426d-8d8d-933a5ad38825
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: Exists
          weight: 1
    containers:
    - args:
      - -c
      - |
        set -eu
        "$@" && exit
        for i in 1 2 3 4 5; do
          echo "attempt #$i has failed (exit code $?), going to make another attempt..." >&2
          sleep $(($i * 30))
          "$@" && break  # this is the last command of the script, so its last failure will be exit code of the script
        done
      - arg0
      - oc
      - adm
      - prune
      - images
      - --confirm=true
      - --certificate-authority=/var/run/configmaps/serviceca/service-ca.crt
      - --keep-tag-revisions=3
      - --keep-younger-than=24h0m0s
      - --ignore-invalid-refs=true
      - --loglevel=1
      - --prune-registry=true
      - --registry-url=https://image-registry.openshift-image-registry.svc:5000
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      imagePullPolicy: IfNotPresent
      name: image-pruner
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/serviceca
        name: serviceca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9k82s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: pruner-dockercfg-46nbf
    nodeName: ip-10-0-148-123.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: pruner
    serviceAccountName: pruner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: serviceca
      name: serviceca
    - name: kube-api-access-9k82s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T21:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T21:00:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T21:00:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T21:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1b7200000f79bed764029ce4aec344b8eb27bb20d2d14ced729664803e44f53c
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/cli@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      lastState: {}
      name: image-pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://1b7200000f79bed764029ce4aec344b8eb27bb20d2d14ced729664803e44f53c
          exitCode: 0
          finishedAt: "2022-05-24T21:00:04Z"
          reason: Completed
          startedAt: "2022-05-24T21:00:02Z"
    hostIP: 10.0.148.123
    phase: Succeeded
    podIP: 10.128.4.50
    podIPs:
    - ip: 10.128.4.50
    qosClass: Burstable
    startTime: "2022-05-24T21:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.66"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.66"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T22:00:00Z"
    generateName: image-pruner-27557160-
    labels:
      controller-uid: 0513e62c-4896-495d-91a5-e489ce343d22
      job-name: image-pruner-27557160
    name: image-pruner-27557160-8vb87
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: image-pruner-27557160
      uid: 0513e62c-4896-495d-91a5-e489ce343d22
    resourceVersion: "235184"
    uid: f51f3f16-4839-40d4-987b-0125d1bc8bc5
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: Exists
          weight: 1
    containers:
    - args:
      - -c
      - |
        set -eu
        "$@" && exit
        for i in 1 2 3 4 5; do
          echo "attempt #$i has failed (exit code $?), going to make another attempt..." >&2
          sleep $(($i * 30))
          "$@" && break  # this is the last command of the script, so its last failure will be exit code of the script
        done
      - arg0
      - oc
      - adm
      - prune
      - images
      - --confirm=true
      - --certificate-authority=/var/run/configmaps/serviceca/service-ca.crt
      - --keep-tag-revisions=3
      - --keep-younger-than=24h0m0s
      - --ignore-invalid-refs=true
      - --loglevel=1
      - --prune-registry=true
      - --registry-url=https://image-registry.openshift-image-registry.svc:5000
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      imagePullPolicy: IfNotPresent
      name: image-pruner
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/serviceca
        name: serviceca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpwn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: pruner-dockercfg-46nbf
    nodeName: ip-10-0-148-123.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: pruner
    serviceAccountName: pruner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: serviceca
      name: serviceca
    - name: kube-api-access-hpwn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T22:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T22:00:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T22:00:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T22:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://912c6c6e958c3f445544a12a9c4efdb8ba4889fdb51fbbe5422108cd783ca53a
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/cli@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      lastState: {}
      name: image-pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://912c6c6e958c3f445544a12a9c4efdb8ba4889fdb51fbbe5422108cd783ca53a
          exitCode: 0
          finishedAt: "2022-05-24T22:00:03Z"
          reason: Completed
          startedAt: "2022-05-24T22:00:02Z"
    hostIP: 10.0.148.123
    phase: Succeeded
    podIP: 10.128.4.66
    podIPs:
    - ip: 10.128.4.66
    qosClass: Burstable
    startTime: "2022-05-24T22:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.84"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.84"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T23:00:00Z"
    generateName: image-pruner-27557220-
    labels:
      controller-uid: 8fd7dc43-51bd-4d67-b89b-7551b681191b
      job-name: image-pruner-27557220
    name: image-pruner-27557220-8wzjg
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: image-pruner-27557220
      uid: 8fd7dc43-51bd-4d67-b89b-7551b681191b
    resourceVersion: "283021"
    uid: b86a6245-1d36-4e46-ab94-418c75723d4e
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: Exists
          weight: 1
    containers:
    - args:
      - -c
      - |
        set -eu
        "$@" && exit
        for i in 1 2 3 4 5; do
          echo "attempt #$i has failed (exit code $?), going to make another attempt..." >&2
          sleep $(($i * 30))
          "$@" && break  # this is the last command of the script, so its last failure will be exit code of the script
        done
      - arg0
      - oc
      - adm
      - prune
      - images
      - --confirm=true
      - --certificate-authority=/var/run/configmaps/serviceca/service-ca.crt
      - --keep-tag-revisions=3
      - --keep-younger-than=24h0m0s
      - --ignore-invalid-refs=true
      - --loglevel=1
      - --prune-registry=true
      - --registry-url=https://image-registry.openshift-image-registry.svc:5000
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      imagePullPolicy: IfNotPresent
      name: image-pruner
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/serviceca
        name: serviceca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jpvsb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: pruner-dockercfg-46nbf
    nodeName: ip-10-0-148-123.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: pruner
    serviceAccountName: pruner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: serviceca
      name: serviceca
    - name: kube-api-access-jpvsb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T23:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T23:00:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T23:00:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T23:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cacd82015f74bbb08e68a6a0598f0ca605c4caa50e83ca617bd321d935d8b118
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      imageID: image-registry.openshift-image-registry.svc:5000/openshift/cli@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
      lastState: {}
      name: image-pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://cacd82015f74bbb08e68a6a0598f0ca605c4caa50e83ca617bd321d935d8b118
          exitCode: 0
          finishedAt: "2022-05-24T23:00:04Z"
          reason: Completed
          startedAt: "2022-05-24T23:00:02Z"
    hostIP: 10.0.148.123
    phase: Succeeded
    podIP: 10.128.4.84
    podIPs:
    - ip: 10.128.4.84
    qosClass: Burstable
    startTime: "2022-05-24T23:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      imageregistry.operator.openshift.io/dependencies-checksum: sha256:840e66e8757d8d90ae22bd48aa0ea81556a3a083ec052a00bb14f151e42ea461
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.13"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.128.4.13"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T18:42:54Z"
    generateName: image-registry-6cf9b659bc-
    labels:
      docker-registry: default
      pod-template-hash: 6cf9b659bc
    name: image-registry-6cf9b659bc-6wmz4
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-registry-6cf9b659bc
      uid: 24a91825-4457-420f-9bf8-4a324559b837
    resourceVersion: "76658"
    uid: 6a1ef3f1-a32f-4dae-b806-30b2e3ddd4f5
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: Exists
          weight: 1
    containers:
    - command:
      - /bin/sh
      - -c
      - mkdir -p /etc/pki/ca-trust/extracted/edk2 /etc/pki/ca-trust/extracted/java
        /etc/pki/ca-trust/extracted/openssl /etc/pki/ca-trust/extracted/pem && update-ca-trust
        extract && exec /usr/bin/dockerregistry
      env:
      - name: REGISTRY_STORAGE
        value: s3
      - name: REGISTRY_STORAGE_S3_BUCKET
        value: odf-service-c778b-image-registry-us-east-1-yymogfebmstunxgrhhj
      - name: REGISTRY_STORAGE_S3_REGION
        value: us-east-1
      - name: REGISTRY_STORAGE_S3_ENCRYPT
        value: "true"
      - name: REGISTRY_STORAGE_S3_VIRTUALHOSTEDSTYLE
        value: "false"
      - name: REGISTRY_STORAGE_S3_USEDUALSTACK
        value: "true"
      - name: REGISTRY_STORAGE_S3_CREDENTIALSCONFIGPATH
        value: /var/run/secrets/cloud/credentials
      - name: REGISTRY_HTTP_ADDR
        value: :5000
      - name: REGISTRY_HTTP_NET
        value: tcp
      - name: REGISTRY_HTTP_SECRET
        value: 089145993e6168f7a9bb7cca40f99e2f584659e2e26f2f68e253aa01e99ed25fac63f387f380705a7c0f2832eca4d6e16b8f84fd3b11dadba6a00e020b6b95a8
      - name: REGISTRY_LOG_LEVEL
        value: info
      - name: REGISTRY_OPENSHIFT_QUOTA_ENABLED
        value: "true"
      - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
        value: inmemory
      - name: REGISTRY_STORAGE_DELETE_ENABLED
        value: "true"
      - name: REGISTRY_OPENSHIFT_METRICS_ENABLED
        value: "true"
      - name: REGISTRY_OPENSHIFT_SERVER_ADDR
        value: image-registry.openshift-image-registry.svc:5000
      - name: REGISTRY_HTTP_TLS_CERTIFICATE
        value: /etc/secrets/tls.crt
      - name: REGISTRY_HTTP_TLS_KEY
        value: /etc/secrets/tls.key
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 5000
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: registry
      ports:
      - containerPort: 5000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 5000
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/cloud
        name: image-registry-private-configuration
        readOnly: true
      - mountPath: /etc/secrets
        name: registry-tls
      - mountPath: /etc/pki/ca-trust/extracted
        name: ca-trust-extracted
      - mountPath: /etc/pki/ca-trust/source/anchors
        name: registry-certificates
      - mountPath: /usr/share/pki/ca-trust-source
        name: trusted-ca
      - mountPath: /var/lib/kubelet/
        name: installation-pull-secrets
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8csrs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: registry-dockercfg-48sr8
    nodeName: ip-10-0-148-123.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      fsGroupChangePolicy: OnRootMismatch
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: registry
    serviceAccountName: registry
    terminationGracePeriodSeconds: 55
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: image-registry-private-configuration
      secret:
        defaultMode: 420
        optional: false
        secretName: image-registry-private-configuration
    - name: registry-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: image-registry-tls
    - emptyDir: {}
      name: ca-trust-extracted
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: registry-certificates
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: anchors/ca-bundle.crt
        name: trusted-ca
        optional: true
      name: trusted-ca
    - name: installation-pull-secrets
      secret:
        defaultMode: 420
        items:
        - key: .dockerconfigjson
          path: config.json
        optional: true
        secretName: installation-pull-secrets
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - name: kube-api-access-8csrs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://154a10af90e2bf0a2d0f888fab43e572776a05c698faabcc9480ac0036cb891a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: registry
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:42:56Z"
    hostIP: 10.0.148.123
    phase: Running
    podIP: 10.128.4.13
    podIPs:
    - ip: 10.128.4.13
    qosClass: Burstable
    startTime: "2022-05-24T18:42:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      imageregistry.operator.openshift.io/dependencies-checksum: sha256:840e66e8757d8d90ae22bd48aa0ea81556a3a083ec052a00bb14f151e42ea461
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.131.2.22"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.131.2.22"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2022-05-24T18:42:29Z"
    generateName: image-registry-6cf9b659bc-
    labels:
      docker-registry: default
      pod-template-hash: 6cf9b659bc
    name: image-registry-6cf9b659bc-9vfp2
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-registry-6cf9b659bc
      uid: 24a91825-4457-420f-9bf8-4a324559b837
    resourceVersion: "75656"
    uid: 5b4c37d9-c856-4521-8cc8-db1d0b317177
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/infra
              operator: Exists
          weight: 1
    containers:
    - command:
      - /bin/sh
      - -c
      - mkdir -p /etc/pki/ca-trust/extracted/edk2 /etc/pki/ca-trust/extracted/java
        /etc/pki/ca-trust/extracted/openssl /etc/pki/ca-trust/extracted/pem && update-ca-trust
        extract && exec /usr/bin/dockerregistry
      env:
      - name: REGISTRY_STORAGE
        value: s3
      - name: REGISTRY_STORAGE_S3_BUCKET
        value: odf-service-c778b-image-registry-us-east-1-yymogfebmstunxgrhhj
      - name: REGISTRY_STORAGE_S3_REGION
        value: us-east-1
      - name: REGISTRY_STORAGE_S3_ENCRYPT
        value: "true"
      - name: REGISTRY_STORAGE_S3_VIRTUALHOSTEDSTYLE
        value: "false"
      - name: REGISTRY_STORAGE_S3_USEDUALSTACK
        value: "true"
      - name: REGISTRY_STORAGE_S3_CREDENTIALSCONFIGPATH
        value: /var/run/secrets/cloud/credentials
      - name: REGISTRY_HTTP_ADDR
        value: :5000
      - name: REGISTRY_HTTP_NET
        value: tcp
      - name: REGISTRY_HTTP_SECRET
        value: 089145993e6168f7a9bb7cca40f99e2f584659e2e26f2f68e253aa01e99ed25fac63f387f380705a7c0f2832eca4d6e16b8f84fd3b11dadba6a00e020b6b95a8
      - name: REGISTRY_LOG_LEVEL
        value: info
      - name: REGISTRY_OPENSHIFT_QUOTA_ENABLED
        value: "true"
      - name: REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR
        value: inmemory
      - name: REGISTRY_STORAGE_DELETE_ENABLED
        value: "true"
      - name: REGISTRY_OPENSHIFT_METRICS_ENABLED
        value: "true"
      - name: REGISTRY_OPENSHIFT_SERVER_ADDR
        value: image-registry.openshift-image-registry.svc:5000
      - name: REGISTRY_HTTP_TLS_CERTIFICATE
        value: /etc/secrets/tls.crt
      - name: REGISTRY_HTTP_TLS_KEY
        value: /etc/secrets/tls.key
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 5000
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: registry
      ports:
      - containerPort: 5000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 5000
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000310000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/cloud
        name: image-registry-private-configuration
        readOnly: true
      - mountPath: /etc/secrets
        name: registry-tls
      - mountPath: /etc/pki/ca-trust/extracted
        name: ca-trust-extracted
      - mountPath: /etc/pki/ca-trust/source/anchors
        name: registry-certificates
      - mountPath: /usr/share/pki/ca-trust-source
        name: trusted-ca
      - mountPath: /var/lib/kubelet/
        name: installation-pull-secrets
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2nspp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: registry-dockercfg-48sr8
    nodeName: ip-10-0-166-35.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000310000
      fsGroupChangePolicy: OnRootMismatch
      seLinuxOptions:
        level: s0:c18,c2
    serviceAccount: registry
    serviceAccountName: registry
    terminationGracePeriodSeconds: 55
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: image-registry-private-configuration
      secret:
        defaultMode: 420
        optional: false
        secretName: image-registry-private-configuration
    - name: registry-tls
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: image-registry-tls
    - emptyDir: {}
      name: ca-trust-extracted
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: registry-certificates
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: anchors/ca-bundle.crt
        name: trusted-ca
        optional: true
      name: trusted-ca
    - name: installation-pull-secrets
      secret:
        defaultMode: 420
        items:
        - key: .dockerconfigjson
          path: config.json
        optional: true
        secretName: installation-pull-secrets
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - name: kube-api-access-2nspp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2c7f215c5b564e433546700cd0add87f58f1f34515b684a63675a1fafadaf171
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: registry
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:42:32Z"
    hostIP: 10.0.166.35
    phase: Running
    podIP: 10.131.2.22
    podIPs:
    - ip: 10.131.2.22
    qosClass: Burstable
    startTime: "2022-05-24T18:42:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:27:57Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-4gb7h
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "56189"
    uid: 798a7be2-72dc-4b6e-bc98-612b9df6bf7b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-166-35.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b8264
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-166-35.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-b8264
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:32:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:32:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ed3a9728523c47d3b57e1d483317625581105dfd9050a9c9313fb75105e5694d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:32:22Z"
    hostIP: 10.0.166.35
    phase: Running
    podIP: 10.0.166.35
    podIPs:
    - ip: 10.0.166.35
    qosClass: Burstable
    startTime: "2022-05-24T18:27:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:13:29Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-6shd6
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "37304"
    uid: 0f0bbfee-cb18-460c-8388-4eb7a062d3b8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-128-34.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2v2jj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-128-34.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-2v2jj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6861915efa6d3ef650ed66cd558907339b778ff956419908ca826071249dce6a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:27:30Z"
    hostIP: 10.0.128.34
    phase: Running
    podIP: 10.0.128.34
    podIPs:
    - ip: 10.0.128.34
    qosClass: Burstable
    startTime: "2022-05-24T18:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:13:29Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-7qrb9
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "71123"
    uid: 93726b6e-c836-4ef1-be35-9cdb5d4a4358
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-149-121.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nkvl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-149-121.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-9nkvl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:40:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:40:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d09bd2d35e36f1a82181fe3606b455b2a378c492e4d2bf3ce390243a7db2668f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:40:32Z"
    hostIP: 10.0.149.121
    phase: Running
    podIP: 10.0.149.121
    podIPs:
    - ip: 10.0.149.121
    qosClass: Burstable
    startTime: "2022-05-24T18:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:13:29Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-9lzgh
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "52789"
    uid: e9ae938c-98f8-487f-852d-1893bf546548
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-169-205.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hgrpc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-169-205.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-hgrpc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:31:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:31:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://67df595410972fd413ba8ad0b9f66080f633d703f12892f899443ca5feffe430
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:31:21Z"
    hostIP: 10.0.169.205
    phase: Running
    podIP: 10.0.169.205
    podIPs:
    - ip: 10.0.169.205
    qosClass: Burstable
    startTime: "2022-05-24T18:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:13:29Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-gvsxs
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "69642"
    uid: 859f809e-115e-4cdc-b1fd-b61a1ff4946e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-164-190.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kpxwb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-164-190.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-kpxwb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:40:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:40:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://932da03a9aac630540814a43a6c355dbea84e520ed5b713495b79b54fc9821f4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:40:01Z"
    hostIP: 10.0.164.190
    phase: Running
    podIP: 10.0.164.190
    podIPs:
    - ip: 10.0.164.190
    qosClass: Burstable
    startTime: "2022-05-24T18:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:13:29Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-lvrbq
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "61495"
    uid: bb9d0d5f-c8f2-4466-9c47-d8a8b7966fd5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-138-197.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6xz9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-138-197.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-l6xz9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:35:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:35:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3198ba1380d8151d71fc0dc0cd7ba48fa3aa41ab295773de38e8a541571c982e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:35:56Z"
    hostIP: 10.0.138.197
    phase: Running
    podIP: 10.0.138.197
    podIPs:
    - ip: 10.0.138.197
    qosClass: Burstable
    startTime: "2022-05-24T18:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:15:39Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-rtckh
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "78523"
    uid: 198a9c7a-711c-4e0f-a1d8-1917028e674e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-145-179.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cp9z8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-145-179.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-cp9z8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:15:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:44:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:44:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:15:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7bc62f8f29420c1cce2929ce55d514883af9f9b687b1bf093305770885225059
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:44:14Z"
    hostIP: 10.0.145.179
    phase: Running
    podIP: 10.0.145.179
    podIPs:
    - ip: 10.0.145.179
    qosClass: Burstable
    startTime: "2022-05-24T18:15:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:27:39Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-vmnbl
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "67085"
    uid: 0ffdbce6-acb5-453b-b79f-9687dd4f1c34
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-140-240.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7lwdc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-140-240.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-7lwdc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:38:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:38:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:27:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4f81829a99a19754c5980a27e2073100f3fa1d53ad4ae0c2b93c7dd3e8472f07
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:38:31Z"
    hostIP: 10.0.140.240
    phase: Running
    podIP: 10.0.140.240
    podIPs:
    - ip: 10.0.140.240
    qosClass: Burstable
    startTime: "2022-05-24T18:27:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: privileged
    creationTimestamp: "2022-05-24T18:28:12Z"
    generateName: node-ca-
    labels:
      controller-revision-hash: 55d6ffd898
      name: node-ca
      pod-template-generation: "1"
    name: node-ca-vwvvn
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-ca
      uid: 8a3836ec-db14-4566-b629-3e59862b08bf
    resourceVersion: "74507"
    uid: fa9dad80-b1e6-41a0-8efc-a7b594113b26
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-148-123.ec2.internal
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        trap 'jobs -p | xargs -r kill; echo shutting down node-ca; exit 0' TERM
        while [ true ];
        do
          for f in $(ls /tmp/serviceca); do
              echo $f
              ca_file_path="/tmp/serviceca/${f}"
              f=$(echo $f | sed  -r 's/(.*)\.\./\1:/')
              reg_dir_path="/etc/docker/certs.d/${f}"
              if [ -e "${reg_dir_path}" ]; then
                  cp -u $ca_file_path $reg_dir_path/ca.crt
              else
                  mkdir $reg_dir_path
                  cp $ca_file_path $reg_dir_path/ca.crt
              fi
          done
          for d in $(ls /etc/docker/certs.d); do
              echo $d
              dp=$(echo $d | sed  -r 's/(.*):/\1\.\./')
              reg_conf_path="/tmp/serviceca/${dp}"
              if [ ! -e "${reg_conf_path}" ]; then
                  rm -rf /etc/docker/certs.d/$d
              fi
          done
          sleep 60 & wait ${!}
        done
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imagePullPolicy: IfNotPresent
      name: node-ca
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
        runAsGroup: 0
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/serviceca
        name: serviceca
      - mountPath: /etc/docker/certs.d
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5chrh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: node-ca-dockercfg-wsmvr
    nodeName: ip-10-0-148-123.ec2.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-ca
    serviceAccountName: node-ca
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/docker/certs.d
        type: ""
      name: host
    - configMap:
        defaultMode: 420
        name: image-registry-certificates
      name: serviceca
    - name: kube-api-access-5chrh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:28:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:42:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-05-24T18:28:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c90bc7c76faca90d54011a455cf3c94e972dd8f667db59c15c81ebd542dee6a1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8901f71be47872f0346e8461f3f78f7e84fa6d8affabf70ef1e428442cce9c35
      lastState: {}
      name: node-ca
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2022-05-24T18:42:05Z"
    hostIP: 10.0.148.123
    phase: Running
    podIP: 10.0.148.123
    podIPs:
    - ip: 10.0.148.123
    qosClass: Burstable
    startTime: "2022-05-24T18:28:12Z"
kind: PodList
metadata:
  resourceVersion: "312077"
