---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2022-05-24T18:08:52Z"
    generation: 4
    labels:
      ingresscontroller.operator.openshift.io/owning-ingresscontroller: default
    name: router-default
    namespace: openshift-ingress
    resourceVersion: "72356"
    uid: b76058fd-20e9-43c4-a6ef-4a9bae514f62
  spec:
    minReadySeconds: 30
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 50%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          unsupported.do-not-use.openshift.io/override-liveness-grace-period-seconds: "10"
        creationTimestamp: null
        labels:
          ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
          ingresscontroller.operator.openshift.io/hash: 66b8c759d9
      spec:
        affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: ingresscontroller.operator.openshift.io/deployment-ingresscontroller
                    operator: In
                    values:
                    - default
                  - key: ingresscontroller.operator.openshift.io/hash
                    operator: NotIn
                    values:
                    - 66b8c759d9
                topologyKey: kubernetes.io/hostname
              weight: 100
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: ingresscontroller.operator.openshift.io/deployment-ingresscontroller
                  operator: In
                  values:
                  - default
                - key: ingresscontroller.operator.openshift.io/hash
                  operator: In
                  values:
                  - 66b8c759d9
              topologyKey: kubernetes.io/hostname
        containers:
        - env:
          - name: DEFAULT_CERTIFICATE_DIR
            value: /etc/pki/tls/private
          - name: DEFAULT_DESTINATION_CA_PATH
            value: /var/run/configmaps/service-ca/service-ca.crt
          - name: RELOAD_INTERVAL
            value: 5s
          - name: ROUTER_ALLOW_WILDCARD_ROUTES
            value: "false"
          - name: ROUTER_CANONICAL_HOSTNAME
            value: router-default.apps.odf-service.dif5.p1.openshiftapps.com
          - name: ROUTER_CIPHERS
            value: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
          - name: ROUTER_CIPHERSUITES
            value: TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
          - name: ROUTER_DISABLE_HTTP2
            value: "false"
          - name: ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK
            value: "false"
          - name: ROUTER_LOAD_BALANCE_ALGORITHM
            value: leastconn
          - name: ROUTER_METRICS_TLS_CERT_FILE
            value: /etc/pki/tls/metrics-certs/tls.crt
          - name: ROUTER_METRICS_TLS_KEY_FILE
            value: /etc/pki/tls/metrics-certs/tls.key
          - name: ROUTER_METRICS_TYPE
            value: haproxy
          - name: ROUTER_SERVICE_NAME
            value: default
          - name: ROUTER_SERVICE_NAMESPACE
            value: openshift-ingress
          - name: ROUTER_SET_FORWARDED_HEADERS
            value: append
          - name: ROUTER_TCP_BALANCE_SCHEME
            value: source
          - name: ROUTER_THREADS
            value: "4"
          - name: ROUTER_USE_PROXY_PROTOCOL
            value: "true"
          - name: SSL_MIN_VERSION
            value: TLSv1.2
          - name: STATS_PASSWORD_FILE
            value: /var/lib/haproxy/conf/metrics-auth/statsPassword
          - name: STATS_PORT
            value: "1936"
          - name: STATS_USERNAME_FILE
            value: /var/lib/haproxy/conf/metrics-auth/statsUsername
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a18d11de075fc9b11409f4bc4864bc73023d1510b0bb62b78f156d9a8819386e
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 1936
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: router
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 1936
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 1936
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: /healthz/ready
              port: 1936
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/pki/tls/private
            name: default-certificate
            readOnly: true
          - mountPath: /var/run/configmaps/service-ca
            name: service-ca-bundle
            readOnly: true
          - mountPath: /var/lib/haproxy/conf/metrics-auth
            name: stats-auth
            readOnly: true
          - mountPath: /etc/pki/tls/metrics-certs
            name: metrics-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: router
        serviceAccountName: router
        terminationGracePeriodSeconds: 3600
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchExpressions:
            - key: ingresscontroller.operator.openshift.io/hash
              operator: In
              values:
              - 66b8c759d9
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: default-certificate
          secret:
            defaultMode: 420
            secretName: odf-service-primary-cert-bundle-secret
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: service-ca-bundle
            optional: false
          name: service-ca-bundle
        - name: stats-auth
          secret:
            defaultMode: 420
            secretName: router-stats-default
        - name: metrics-certs
          secret:
            defaultMode: 420
            secretName: router-metrics-certs-default
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2022-05-24T18:13:47Z"
      lastUpdateTime: "2022-05-24T18:13:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-05-24T18:08:52Z"
      lastUpdateTime: "2022-05-24T18:29:35Z"
      message: ReplicaSet "router-default-6f54df4f4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: DeploymentList
metadata:
  resourceVersion: "297081"
