---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "openshift-sdn",
          "interface": "eth0",
          "ips": [
              "10.128.4.82"
          ],
          "default": true,
          "dns": {}
      }]
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "openshift-sdn",
          "interface": "eth0",
          "ips": [
              "10.128.4.82"
          ],
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: restricted
  creationTimestamp: "2022-05-24T23:00:00Z"
  generateName: osd-patch-subscription-source-27557220-
  labels:
    controller-uid: f88d5691-2f41-475b-9427-770f2be953db
    job-name: osd-patch-subscription-source-27557220
  name: osd-patch-subscription-source-27557220-ppkrd
  namespace: openshift-marketplace
  ownerReferences:
  - apiVersion: batch/v1
    blockOwnerDeletion: true
    controller: true
    kind: Job
    name: osd-patch-subscription-source-27557220
    uid: f88d5691-2f41-475b-9427-770f2be953db
  resourceVersion: "283018"
  uid: 6a25558d-e00e-42f6-8208-6e347b285e46
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: node-role.kubernetes.io/infra
            operator: Exists
        weight: 1
  containers:
  - args:
    - /bin/bash
    - -c
    - |
      # Script run as an idempotent cronjob to fix existing subscriptions when disabling OSD operator curation.

      # for each type of source (redhat, certified, communit)
      # AND for each namespace having a subscription with a curated community source
      # AND for each subscription having a curated source
      # patch the source
      # NOTE there are loops for each source to keep the jsonpath simple and the logic easy to read

      echo START
      for NS in $(oc get subscription -A -o jsonpath='{.items[?(@.spec.source=="osd-curated-redhat-operators")].metadata.namespace}');
      do
        for SUB in $(oc -n $NS get subscription -o jsonpath='{.items[?(@.spec.source=="osd-curated-redhat-operators")].metadata.name}');
        do
          echo "Patching subscription '$SUB' in namespace '$NS'"
          oc -n $NS patch subscription $SUB --patch '{"spec":{"source":"redhat-operators"}}' --type merge
        done
      done

      for NS in $(oc get subscription -A -o jsonpath='{.items[?(@.spec.source=="osd-curated-certified-operators")].metadata.namespace}');
      do
        for SUB in $(oc -n $NS get subscription -o jsonpath='{.items[?(@.spec.source=="osd-curated-certified-operators")].metadata.name}');
        do
          echo "Patching subscription '$SUB' in namespace '$NS'"
          oc -n $NS patch subscription $SUB --patch '{"spec":{"source":"certified-operators"}}' --type merge
        done
      done

      for NS in $(oc get subscription -A -o jsonpath='{.items[?(@.spec.source=="osd-curated-community-operators")].metadata.namespace}');
      do
        for SUB in $(oc -n $NS get subscription -o jsonpath='{.items[?(@.spec.source=="osd-curated-community-operators")].metadata.name}');
        do
          echo "Patching subscription '$SUB' in namespace '$NS'"
          oc -n $NS patch subscription $SUB --patch '{"spec":{"source":"community-operators"}}' --type merge
        done
      done
      echo FINISH
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    imagePullPolicy: Always
    name: osd-patch-subscription-source
    resources: {}
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      runAsUser: 1000190000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-2h4wr
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: osd-patch-subscription-source-dockercfg-rmdjx
  nodeName: ip-10-0-148-123.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000190000
    seLinuxOptions:
      level: s0:c14,c4
  serviceAccount: osd-patch-subscription-source
  serviceAccountName: osd-patch-subscription-source
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/infra
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-2h4wr
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-05-24T23:00:00Z"
    reason: PodCompleted
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-05-24T23:00:04Z"
    reason: PodCompleted
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-05-24T23:00:04Z"
    reason: PodCompleted
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-05-24T23:00:00Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://93cbf25b77a3f0f52d35b1c33e1ae26940eb6073c7b564cc7477ced74f90f05c
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    imageID: image-registry.openshift-image-registry.svc:5000/openshift/cli@sha256:5cb8eed4d9713a7a3da331026e21773c76d52feef9a591921807ccf217f66757
    lastState: {}
    name: osd-patch-subscription-source
    ready: false
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://93cbf25b77a3f0f52d35b1c33e1ae26940eb6073c7b564cc7477ced74f90f05c
        exitCode: 0
        finishedAt: "2022-05-24T23:00:03Z"
        reason: Completed
        startedAt: "2022-05-24T23:00:02Z"
  hostIP: 10.0.148.123
  phase: Succeeded
  podIP: 10.128.4.82
  podIPs:
  - ip: 10.128.4.82
  qosClass: BestEffort
  startTime: "2022-05-24T23:00:00Z"
