---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      prometheus-operator-input-hash: "11015422163981322799"
    creationTimestamp: "2022-05-24T18:28:25Z"
    generation: 1
    labels:
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.23.0
    name: alertmanager-main
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: Alertmanager
      name: main
      uid: 7400411e-48a7-4de8-9804-4e42595e7480
    resourceVersion: "70664"
    uid: 252a0be3-2c19-4173-82e8-dae4cfb40e00
  spec:
    podManagementPolicy: Parallel
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        alertmanager: main
        app.kubernetes.io/instance: main
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager-operated
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: alertmanager
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          alertmanager: main
          app.kubernetes.io/component: alert-router
          app.kubernetes.io/instance: main
          app.kubernetes.io/managed-by: prometheus-operator
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.23.0
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: alert-router
                  app.kubernetes.io/instance: main
                  app.kubernetes.io/name: alertmanager
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config.file=/etc/alertmanager/config/alertmanager.yaml
          - --storage.path=/alertmanager
          - --data.retention=120h
          - --cluster.listen-address=[$(POD_IP)]:9094
          - --web.listen-address=127.0.0.1:9093
          - --web.external-url=https:/console-openshift-console.apps.odf-service.dif5.p1.openshiftapps.com/monitoring
          - --web.route-prefix=/
          - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
          - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
          - --cluster.reconnect-timeout=5m
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:21780af60acd852880a5b19eb1d3597e83fd2d4e3854c48f7763f04100756a36
          imagePullPolicy: IfNotPresent
          name: alertmanager
          ports:
          - containerPort: 9094
            name: mesh-tcp
            protocol: TCP
          - containerPort: 9094
            name: mesh-udp
            protocol: UDP
          resources:
            requests:
              cpu: 4m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
          - mountPath: /etc/alertmanager/certs
            name: tls-assets
            readOnly: true
          - mountPath: /alertmanager
            name: alertmanager-data
            subPath: alertmanager-db
          - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
            name: secret-alertmanager-main-tls
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
            name: secret-alertmanager-main-proxy
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
            name: secret-alertmanager-kube-rbac-proxy
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
            name: secret-alertmanager-kube-rbac-proxy-metric
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted/pem/
            name: alertmanager-trusted-ca-bundle
            readOnly: true
        - args:
          - --listen-address=localhost:8080
          - --reload-url=http://localhost:9093/-/reload
          - --watched-dir=/etc/alertmanager/config
          - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
          - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-proxy
          - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
          - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "-1"
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5d406a68f3fb45008977ea6f4d1cda50c8a878cf0055c11308b1785d5a06023
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
            name: secret-alertmanager-main-tls
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
            name: secret-alertmanager-main-proxy
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
            name: secret-alertmanager-kube-rbac-proxy
            readOnly: true
          - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
            name: secret-alertmanager-kube-rbac-proxy-metric
            readOnly: true
        - args:
          - -provider=openshift
          - -https-address=:9095
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:9093
          - '-openshift-sar=[{"resource": "namespaces", "verb": "get"}, {"resource":
            "alertmanagers", "resourceAPIGroup": "monitoring.coreos.com", "namespace":
            "openshift-monitoring", "verb": "patch", "resourceName": "non-existant"}]'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"},
            "/": {"resource":"alertmanagers", "group": "monitoring.coreos.com", "namespace":
            "openshift-monitoring", "verb": "patch", "name": "non-existant"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -openshift-service-account=alertmanager-main
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          env:
          - name: HTTP_PROXY
          - name: HTTPS_PROXY
          - name: NO_PROXY
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d787f47ee2a410f924ea00b2428f0cf2275eb059adac96ca1b69c71ad20ccb1d
          imagePullPolicy: IfNotPresent
          name: alertmanager-proxy
          ports:
          - containerPort: 9095
            name: web
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-alertmanager-main-tls
          - mountPath: /etc/proxy/secrets
            name: secret-alertmanager-main-proxy
          - mountPath: /etc/pki/ca-trust/extracted/pem/
            name: alertmanager-trusted-ca-bundle
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:9092
          - --upstream=http://127.0.0.1:9096
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --logtostderr=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08e8b4004edaeeb125ced09ab2c4cd6d690afaf3a86309c91a994dec8e3ccbf3
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 9092
            name: tenancy
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kube-rbac-proxy
            name: secret-alertmanager-kube-rbac-proxy
          - mountPath: /etc/tls/private
            name: secret-alertmanager-main-tls
        - args:
          - --secure-listen-address=0.0.0.0:9097
          - --upstream=http://127.0.0.1:9093
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --logtostderr=true
          - --allow-paths=/metrics
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08e8b4004edaeeb125ced09ab2c4cd6d690afaf3a86309c91a994dec8e3ccbf3
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-metric
          ports:
          - containerPort: 9097
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kube-rbac-proxy
            name: secret-alertmanager-kube-rbac-proxy-metric
            readOnly: true
          - mountPath: /etc/tls/private
            name: secret-alertmanager-main-tls
            readOnly: true
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        - args:
          - --insecure-listen-address=127.0.0.1:9096
          - --upstream=http://127.0.0.1:9093
          - --label=namespace
          - --error-on-replace
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5c3e8963d0e5dbce2e30dc0341c7453c30a42395622905b718a8fe9974da41ab
          imagePullPolicy: IfNotPresent
          name: prom-label-proxy
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: alertmanager-main
        serviceAccountName: alertmanager-main
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
        volumes:
        - name: config-volume
          secret:
            defaultMode: 420
            secretName: alertmanager-main-generated
        - name: tls-assets
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: alertmanager-main-tls-assets-0
        - name: secret-alertmanager-main-tls
          secret:
            defaultMode: 420
            secretName: alertmanager-main-tls
        - name: secret-alertmanager-main-proxy
          secret:
            defaultMode: 420
            secretName: alertmanager-main-proxy
        - name: secret-alertmanager-kube-rbac-proxy
          secret:
            defaultMode: 420
            secretName: alertmanager-kube-rbac-proxy
        - name: secret-alertmanager-kube-rbac-proxy-metric
          secret:
            defaultMode: 420
            secretName: alertmanager-kube-rbac-proxy-metric
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: alertmanager-trusted-ca-bundle-2rsonso43rc5p
            optional: true
          name: alertmanager-trusted-ca-bundle
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: alertmanager-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 2
    collisionCount: 0
    currentReplicas: 2
    currentRevision: alertmanager-main-58c6f857b4
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updateRevision: alertmanager-main-58c6f857b4
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      prometheus-operator-input-hash: "12772344362557765963"
    creationTimestamp: "2022-05-24T18:28:21Z"
    generation: 1
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.32.1
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
    name: prometheus-k8s
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      blockOwnerDeletion: true
      controller: true
      kind: Prometheus
      name: k8s
      uid: 602acbd5-cee1-4a47-8a76-2d2be34b057b
    resourceVersion: "71621"
    uid: 2b7a4847-dfd9-4426-8923-3f216037d8d2
  spec:
    podManagementPolicy: Parallel
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: k8s
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: prometheus
        operator.prometheus.io/name: k8s
        operator.prometheus.io/shard: "0"
        prometheus: k8s
    serviceName: prometheus-operated
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: prometheus
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: prometheus
          app.kubernetes.io/instance: k8s
          app.kubernetes.io/managed-by: prometheus-operator
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 2.32.1
          operator.prometheus.io/name: k8s
          operator.prometheus.io/shard: "0"
          prometheus: k8s
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: prometheus
                  app.kubernetes.io/instance: k8s
                  app.kubernetes.io/name: prometheus
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --web.console.templates=/etc/prometheus/consoles
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
          - --storage.tsdb.path=/prometheus
          - --storage.tsdb.retention.time=11d
          - --web.enable-lifecycle
          - --web.external-url=https://prometheus-k8s-openshift-monitoring.apps.odf-service.dif5.p1.openshiftapps.com/
          - --web.route-prefix=/
          - --web.listen-address=127.0.0.1:9090
          - --web.config.file=/etc/prometheus/web_config/web-config.yaml
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:727fe0f3dcdad60f8beee58590b33815345e12d86f9526af81b45de17fb28f59
          imagePullPolicy: IfNotPresent
          name: prometheus
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - if [ -x "$(command -v curl)" ]; then exec curl http://localhost:9090/-/ready;
                elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
                else exit 1; fi
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 70m
              memory: 1Gi
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - if [ -x "$(command -v curl)" ]; then exec curl http://localhost:9090/-/ready;
                elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
                else exit 1; fi
            failureThreshold: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/pki/ca-trust/extracted/pem/
            name: prometheus-trusted-ca-bundle
            readOnly: true
          - mountPath: /etc/prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: tls-assets
            readOnly: true
          - mountPath: /prometheus
            name: prometheus-data
            subPath: prometheus-db
          - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
            name: prometheus-k8s-rulefiles-0
          - mountPath: /etc/prometheus/web_config/web-config.yaml
            name: web-config
            readOnly: true
            subPath: web-config.yaml
          - mountPath: /etc/prometheus/secrets/kube-etcd-client-certs
            name: secret-kube-etcd-client-certs
            readOnly: true
          - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
            name: secret-prometheus-k8s-tls
            readOnly: true
          - mountPath: /etc/prometheus/secrets/prometheus-k8s-proxy
            name: secret-prometheus-k8s-proxy
            readOnly: true
          - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
            name: secret-prometheus-k8s-thanos-sidecar-tls
            readOnly: true
          - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
            name: secret-kube-rbac-proxy
            readOnly: true
          - mountPath: /etc/prometheus/secrets/metrics-client-certs
            name: secret-metrics-client-certs
            readOnly: true
          - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
            name: configmap-serving-certs-ca-bundle
            readOnly: true
          - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
            name: configmap-kubelet-serving-ca-bundle
            readOnly: true
          - mountPath: /etc/prometheus/configmaps/metrics-client-ca
            name: configmap-metrics-client-ca
            readOnly: true
        - args:
          - --listen-address=localhost:8080
          - --reload-url=http://localhost:9090/-/reload
          - --config-file=/etc/prometheus/config/prometheus.yaml.gz
          - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
          - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "0"
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5d406a68f3fb45008977ea6f4d1cda50c8a878cf0055c11308b1785d5a06023
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/prometheus/config
            name: config
          - mountPath: /etc/prometheus/config_out
            name: config-out
          - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
            name: prometheus-k8s-rulefiles-0
        - args:
          - sidecar
          - --prometheus.url=http://localhost:9090/
          - --tsdb.path=/prometheus
          - --http-address=127.0.0.1:10902
          - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
          - --grpc-server-tls-key=/etc/tls/grpc/server.key
          - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8a5a316dec56c12072bd11525534dc01cad163fd44766be4e1fb3406796e662d
          imagePullPolicy: IfNotPresent
          name: thanos-sidecar
          ports:
          - containerPort: 10902
            name: http
            protocol: TCP
          - containerPort: 10901
            name: grpc
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/grpc
            name: secret-grpc-tls
        - args:
          - -provider=openshift
          - -https-address=:9091
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:9090
          - -openshift-service-account=prometheus-k8s
          - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - -htpasswd-file=/etc/proxy/htpasswd/auth
          env:
          - name: HTTP_PROXY
          - name: HTTPS_PROXY
          - name: NO_PROXY
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d787f47ee2a410f924ea00b2428f0cf2275eb059adac96ca1b69c71ad20ccb1d
          imagePullPolicy: IfNotPresent
          name: prometheus-proxy
          ports:
          - containerPort: 9091
            name: web
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-prometheus-k8s-tls
          - mountPath: /etc/proxy/secrets
            name: secret-prometheus-k8s-proxy
          - mountPath: /etc/proxy/htpasswd
            name: secret-prometheus-k8s-htpasswd
          - mountPath: /etc/pki/ca-trust/extracted/pem/
            name: prometheus-trusted-ca-bundle
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:9092
          - --upstream=http://127.0.0.1:9090
          - --allow-paths=/metrics
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --logtostderr=true
          - --v=10
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08e8b4004edaeeb125ced09ab2c4cd6d690afaf3a86309c91a994dec8e3ccbf3
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 9092
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-prometheus-k8s-tls
          - mountPath: /etc/tls/client
            name: configmap-metrics-client-ca
            readOnly: true
          - mountPath: /etc/kube-rbac-proxy
            name: secret-kube-rbac-proxy
        - args:
          - --secure-listen-address=[$(POD_IP)]:10902
          - --upstream=http://127.0.0.1:10902
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --allow-paths=/metrics
          - --logtostderr=true
          - --tls-min-version=VersionTLS12
          - --client-ca-file=/etc/tls/client/client-ca.crt
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:08e8b4004edaeeb125ced09ab2c4cd6d690afaf3a86309c91a994dec8e3ccbf3
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-thanos
          ports:
          - containerPort: 10902
            name: thanos-proxy
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-prometheus-k8s-thanos-sidecar-tls
          - mountPath: /etc/kube-rbac-proxy
            name: secret-kube-rbac-proxy
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - --watch-interval=0
          - --listen-address=:8080
          - --config-file=/etc/prometheus/config/prometheus.yaml.gz
          - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
          - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SHARD
            value: "0"
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5d406a68f3fb45008977ea6f4d1cda50c8a878cf0055c11308b1785d5a06023
          imagePullPolicy: IfNotPresent
          name: init-config-reloader
          ports:
          - containerPort: 8080
            name: reloader-web
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/prometheus/config
            name: config
          - mountPath: /etc/prometheus/config_out
            name: config-out
          - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
            name: prometheus-k8s-rulefiles-0
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-k8s
        serviceAccountName: prometheus-k8s
        terminationGracePeriodSeconds: 600
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/infra
          operator: Exists
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: prometheus-k8s
        - name: tls-assets
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: prometheus-k8s-tls-assets-0
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: prometheus-k8s-rulefiles-0
          name: prometheus-k8s-rulefiles-0
        - name: web-config
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-web-config
        - name: secret-kube-etcd-client-certs
          secret:
            defaultMode: 420
            secretName: kube-etcd-client-certs
        - name: secret-prometheus-k8s-tls
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-tls
        - name: secret-prometheus-k8s-proxy
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-proxy
        - name: secret-prometheus-k8s-thanos-sidecar-tls
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-thanos-sidecar-tls
        - name: secret-kube-rbac-proxy
          secret:
            defaultMode: 420
            secretName: kube-rbac-proxy
        - name: secret-metrics-client-certs
          secret:
            defaultMode: 420
            secretName: metrics-client-certs
        - configMap:
            defaultMode: 420
            name: serving-certs-ca-bundle
          name: configmap-serving-certs-ca-bundle
        - configMap:
            defaultMode: 420
            name: kubelet-serving-ca-bundle
          name: configmap-kubelet-serving-ca-bundle
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: configmap-metrics-client-ca
        - name: secret-prometheus-k8s-htpasswd
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-htpasswd
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
        - name: secret-grpc-tls
          secret:
            defaultMode: 420
            secretName: prometheus-k8s-grpc-tls-bbs2h7k8eiaor
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: prometheus-trusted-ca-bundle-2rsonso43rc5p
            optional: true
          name: prometheus-trusted-ca-bundle
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: prometheus-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 2
    collisionCount: 0
    currentReplicas: 2
    currentRevision: prometheus-k8s-74467b9dd7
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updateRevision: prometheus-k8s-74467b9dd7
    updatedReplicas: 2
kind: StatefulSetList
metadata:
  resourceVersion: "322405"
